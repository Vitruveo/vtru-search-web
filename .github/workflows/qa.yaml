name: Deploy API for QA

on:
    push:
        branches: [main]
        paths:
            - .github/workflows/*.yaml
            - src/**/*.ts
            - Dockerfile
            - package.json
            - package-lock.json
            - tools/**/*.js

jobs:
    build:
        name: Building a new docker image
        runs-on: ubuntu-latest
        environment: qa
        permissions:
            id-token: write
            contents: read
        steps:
            - uses: actions/checkout@v4
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}
            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2
            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: '18.x'
            - name: Get project version
              id: project-info
              run: node tools/info.js
            - name: Build, tag, and push docker image to Amazon ECR
              env:
                  REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  IMAGE_TAG: ${{ steps.project-info.outputs.version }}
                  REPOSITORY: vitruveo.search.web
                  UPDATE_TOKEN: ${{ secrets.UPDATE_TOKEN }}
                  UPDATE_URL: ${{ secrets.UPDATE_URL }}
                  REPOSITORY_IMAGE: ${{ vars.REPOSITORY_IMAGE }}
                  NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV_QA }}
                  NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL_QA }}
                  NEXT_PUBLIC_API3_BASE_URL: ${{ secrets.NEXT_PUBLIC_API3_BASE_URL_QA }}
                  NEXT_PUBLIC_WS_SERVER_URL: ${{ secrets.NEXT_PUBLIC_WS_SERVER_URL_QA }}
                  NEXT_PUBLIC_STACK_BASE_URL: ${{ secrets.NEXT_PUBLIC_STACK_BASE_URL_QA }}
                  NEXT_PUBLIC_STORE_BASE_URL: ${{ secrets.NEXT_PUBLIC_STORE_BASE_URL_QA }}
                  NEXT_PUBLIC_TOKEN_CREATORS: ${{ secrets.NEXT_PUBLIC_TOKEN_CREATORS_QA }}
                  NEXT_PUBLIC_SLIDESHOW_BASE_URL: ${{ secrets.NEXT_PUBLIC_SLIDESHOW_BASE_URL_QA }}
                  NEXT_PUBLIC_SEARCH_BASE_URL: ${{ secrets.NEXT_PUBLIC_SEARCH_BASE_URL_QA }}
                  NEXT_PUBLIC_STUDIO_BASE_URL: ${{ secrets.NEXT_PUBLIC_STUDIO_BASE_URL_QA }}
                  NEXT_PUBLIC_ASSET_STORAGE_URL: ${{ secrets.NEXT_PUBLIC_ASSET_STORAGE_URL_QA }}
                  NEXT_PUBLIC_GENERAL_STORAGE_URL: ${{ secrets.NEXT_PUBLIC_GENERAL_STORAGE_URL_QA }}
                  NEXT_PUBLIC_STORES_STORAGE_URL: ${{ secrets.NEXT_PUBLIC_STORES_STORAGE_URL_QA }}
                  NEXT_PUBLIC_WEB3_NETWORK_TYPE: ${{ secrets.NEXT_PUBLIC_WEB3_NETWORK_TYPE_QA }}
                  NEXT_PUBLIC_WEB3_PRIVATE_KEY: ${{ secrets.NEXT_PUBLIC_WEB3_PRIVATE_KEY_QA }}
                  NEXT_PUBLIC_WEB3_NETWORK_RPC_ADDRESS: ${{ secrets.NEXT_PUBLIC_WEB3_NETWORK_RPC_ADDRESS_QA }}
                  NEXT_PUBLIC_EXPLORER_BASE_URL: ${{ secrets.NEXT_PUBLIC_EXPLORER_BASE_URL_QA }}
                  NEXT_PUBLIC_WAGMI_APP_NAME: ${{ secrets.NEXT_PUBLIC_WAGMI_APP_NAME_QA }}
                  NEXT_PUBLIC_WAGMI_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_WAGMI_PROJECT_ID_QA }}
              run: |
                  docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG.qa \
                               -t $REGISTRY/$REPOSITORY:latest.qa \
                               --build-arg NEXT_PUBLIC_NODE_ENV=$NEXT_PUBLIC_NODE_ENV \
                               --build-arg NEXT_PUBLIC_API_BASE_URL=$NEXT_PUBLIC_API_BASE_URL \
                               --build-arg NEXT_PUBLIC_API3_BASE_URL=$NEXT_PUBLIC_API3_BASE_URL \
                               --build-arg NEXT_PUBLIC_WS_SERVER_URL=$NEXT_PUBLIC_WS_SERVER_URL \
                               --build-arg NEXT_PUBLIC_STACK_BASE_URL=$NEXT_PUBLIC_STACK_BASE_URL \
                               --build-arg NEXT_PUBLIC_STORE_BASE_URL=$NEXT_PUBLIC_STORE_BASE_URL \
                               --build-arg NEXT_PUBLIC_TOKEN_CREATORS=$NEXT_PUBLIC_TOKEN_CREATORS \
                               --build-arg NEXT_PUBLIC_SLIDESHOW_BASE_URL=$NEXT_PUBLIC_SLIDESHOW_BASE_URL \
                               --build-arg NEXT_PUBLIC_SEARCH_BASE_URL=$NEXT_PUBLIC_SEARCH_BASE_URL \
                               --build-arg NEXT_PUBLIC_STUDIO_BASE_URL=$NEXT_PUBLIC_STUDIO_BASE_URL \
                               --build-arg NEXT_PUBLIC_ASSET_STORAGE_URL=$NEXT_PUBLIC_ASSET_STORAGE_URL \
                               --build-arg NEXT_PUBLIC_GENERAL_STORAGE_URL=$NEXT_PUBLIC_GENERAL_STORAGE_URL \
                               --build-arg NEXT_PUBLIC_STORES_STORAGE_URL=$NEXT_PUBLIC_STORES_STORAGE_URL \
                               --build-arg NEXT_PUBLIC_WEB3_NETWORK_TYPE=$NEXT_PUBLIC_WEB3_NETWORK_TYPE \
                               --build-arg NEXT_PUBLIC_WEB3_PRIVATE_KEY=$NEXT_PUBLIC_WEB3_PRIVATE_KEY \
                               --build-arg NEXT_PUBLIC_WEB3_NETWORK_RPC_ADDRESS=$NEXT_PUBLIC_WEB3_NETWORK_RPC_ADDRESS \
                               --build-arg NEXT_PUBLIC_EXPLORER_BASE_URL=$NEXT_PUBLIC_EXPLORER_BASE_URL \
                               --build-arg NEXT_PUBLIC_WAGMI_APP_NAME=$NEXT_PUBLIC_WAGMI_APP_NAME \
                               --build-arg NEXT_PUBLIC_WAGMI_PROJECT_ID=$NEXT_PUBLIC_WAGMI_PROJECT_ID \
                               -f Dockerfile --network host .
                  docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG.qa
                  docker push $REGISTRY/$REPOSITORY:latest.qa
                  curl -X "POST" -H 'Content-Type: application/json' \
                       -d "{ \"token\": \"$UPDATE_TOKEN\", \"image\": \"$REPOSITORY_IMAGE:$IMAGE_TAG.qa\", \"service\": \"vitruveo-search_web\"}" $UPDATE_URL
